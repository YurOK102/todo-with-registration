[{"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\index.js":"1","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\App.js":"2","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\index.js":"3","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\index.js":"4","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Posts\\Posts.js":"5","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\NotFound\\NotFound.js":"6","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Navbar\\Navbar.js":"7","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Login\\Login.js":"8","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\authActions.js":"9","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\index.js":"10","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\authReducer.js":"11","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Logout\\Logout.js":"12","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\errorReducer.js":"13","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Register\\Register.js":"14","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\errorActions.js":"15","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\postReducer.js":"16","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\postActions.js":"17","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Spinner\\Spinner.js":"18","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Post\\Post.js":"19","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\PostPage\\PostPage.js":"20","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\AddPost\\AddPost.js":"21","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\EditPost\\EditPost.js":"22","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\AddComment\\AddComment.js":"23","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Comments\\Comments.js":"24","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Comment\\Comment.js":"25","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\hocs\\withAuth.js":"26"},{"size":834,"mtime":1610359738230,"results":"27","hashOfConfig":"28"},{"size":1194,"mtime":1610359581806,"results":"29","hashOfConfig":"28"},{"size":290,"mtime":1609748140786,"results":"30","hashOfConfig":"28"},{"size":257,"mtime":1610348327659,"results":"31","hashOfConfig":"28"},{"size":1055,"mtime":1610458865298,"results":"32","hashOfConfig":"28"},{"size":661,"mtime":1610458261938,"results":"33","hashOfConfig":"28"},{"size":3507,"mtime":1610458119721,"results":"34","hashOfConfig":"28"},{"size":4120,"mtime":1610457844563,"results":"35","hashOfConfig":"28"},{"size":894,"mtime":1609832312332,"results":"36","hashOfConfig":"28"},{"size":438,"mtime":1610367409615,"results":"37","hashOfConfig":"28"},{"size":339,"mtime":1609766847869,"results":"38","hashOfConfig":"28"},{"size":602,"mtime":1610457998228,"results":"39","hashOfConfig":"28"},{"size":306,"mtime":1609770233969,"results":"40","hashOfConfig":"28"},{"size":5931,"mtime":1610532774404,"results":"41","hashOfConfig":"28"},{"size":186,"mtime":1609833069956,"results":"42","hashOfConfig":"28"},{"size":755,"mtime":1610367732471,"results":"43","hashOfConfig":"28"},{"size":1327,"mtime":1610458556803,"results":"44","hashOfConfig":"28"},{"size":729,"mtime":1610460021017,"results":"45","hashOfConfig":"28"},{"size":1018,"mtime":1610458413467,"results":"46","hashOfConfig":"28"},{"size":2562,"mtime":1610458695361,"results":"47","hashOfConfig":"28"},{"size":2631,"mtime":1610531679978,"results":"48","hashOfConfig":"28"},{"size":3323,"mtime":1610454015829,"results":"49","hashOfConfig":"28"},{"size":3055,"mtime":1610532373242,"results":"50","hashOfConfig":"28"},{"size":810,"mtime":1610451308241,"results":"51","hashOfConfig":"28"},{"size":1479,"mtime":1610451099092,"results":"52","hashOfConfig":"28"},{"size":597,"mtime":1610532725150,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"crvxw5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\index.js",[],["115","116"],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\App.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\index.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\index.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Posts\\Posts.js",["117"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Spinner from '../Spinner/Spinner'\r\nimport Post from '../Post/Post'\r\n\r\nimport { getPosts } from '../../store/actions/postActions'\r\n\r\nconst Posts = ({ posts, getPosts }) => {\r\n  useEffect(() => {\r\n    getPosts()\r\n  }, [])\r\n\r\n  if (!posts) {\r\n    return <Spinner />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {posts.map((post) => {\r\n        return <Post key={post._id} post={post} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\n// export class Posts extends Component {\r\n//   componentDidMount() {\r\n//     this.props.getPosts()\r\n//   }\r\n\r\n//   render() {\r\n//     const { posts } = this.props\r\n\r\n//     if (!posts) {\r\n//       return <Spinner />\r\n//     }\r\n\r\n//     return (\r\n//       <div>\r\n//         {posts.map((post) => {\r\n//           return <Post key={post._id} post={post} />\r\n//         })}\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.postReducer.posts,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts)\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\NotFound\\NotFound.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Navbar\\Navbar.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Login\\Login.js",["118"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { loginUser } from '../../store/actions/authActions'\r\nimport { clearErrors } from '../../store/actions/errorActions'\r\n\r\nconst Login = ({ user, errors, loginUser, clearErrors }) => {\r\n  let history = useHistory()\r\n\r\n  const [data, setData] = useState({\r\n    email: 'test@test.ru',\r\n    password: '123456',\r\n  })\r\n\r\n  useEffect(() => {\r\n    clearErrors()\r\n    if (user) {\r\n      history.push('/')\r\n    }\r\n  }, [])\r\n\r\n  const { email, password } = data\r\n  const onChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value })\r\n  }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    loginUser(data)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <form className=\"card p-3 m-3 mx-auto col-md-6\" onSubmit={onSubmit}>\r\n        <h2 className=\"text-center\">Вход</h2>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-control\"\r\n            value={email}\r\n            onChange={onChange}\r\n          />\r\n          {errors.email && <div className=\"text-danger\">{errors.email}</div>}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-control\"\r\n            value={password}\r\n            onChange={onChange}\r\n          />\r\n          {errors.password && (\r\n            <div className=\"text-danger\">{errors.password}</div>\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary btn-lg mt-3\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n// export class Login extends React.Component {\r\n//   state = {\r\n//     email: 'test@test.ru',\r\n//     password: '123456',\r\n//   }\r\n\r\n//   componentDidUpdate() {\r\n//     if (this.props.user) {\r\n//       this.props.history.push('/')\r\n//     }\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.props.clearErrors()\r\n//     if (this.props.user) {\r\n//       this.props.history.push('/')\r\n//     }\r\n//   }\r\n\r\n//   onChange = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value })\r\n//   }\r\n\r\n//   onSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     this.props.loginUser(this.state)\r\n//   }\r\n\r\n//   render() {\r\n//     const { errors } = this.props\r\n//     const { email, password } = this.state\r\n\r\n//     return (\r\n//       <div className=\"row\">\r\n//         <form\r\n//           className=\"card p-3 m-3 mx-auto col-md-6\"\r\n//           onSubmit={this.onSubmit}\r\n//         >\r\n//           <h2 className=\"text-center\">Вход</h2>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               className=\"form-control\"\r\n//               value={email}\r\n//               onChange={this.onChange}\r\n//             />\r\n//             {errors.email && <div className=\"text-danger\">{errors.email}</div>}\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               className=\"form-control\"\r\n//               value={password}\r\n//               onChange={this.onChange}\r\n//             />\r\n//             {errors.password && (\r\n//               <div className=\"text-danger\">{errors.password}</div>\r\n//             )}\r\n//           </div>\r\n\r\n//           <button type=\"submit\" className=\"btn btn-primary btn-lg mt-3\">\r\n//             Войти\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.authReducer.user,\r\n  errors: state.errorReducer,\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginUser, clearErrors })(Login)\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\authActions.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\index.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\authReducer.js",["119"],"import * as actions from '../actions/index'\r\n\r\nconst initialState = {\r\n  user: null,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.SET_USER:\r\n      return { user: action.user }\r\n\r\n    case actions.LOGOUT_USER:\r\n      return { user: null }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Logout\\Logout.js",["120"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { logoutUser } from '../../store/actions/authActions'\r\n\r\nconst Logout = ({ logoutUser, history }) => {\r\n  useEffect(() => {\r\n    logoutUser()\r\n    history.replace('/login')\r\n  }, [])\r\n\r\n  return <div>Выход</div>\r\n}\r\n\r\n// export class Logout extends React.Component {\r\n//   componentDidMount() {\r\n//     this.props.logoutUser()\r\n//     this.props.history.replace('/login')\r\n//   }\r\n\r\n//   render() {\r\n//     return <div>Выход</div>\r\n//   }\r\n// }\r\n\r\nexport default connect(null, { logoutUser })(Logout)\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\errorReducer.js",["121"],"import * as actions from '../actions/index'\r\n\r\nconst initialState = {}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.ERROR:\r\n      return { ...action.error }\r\n\r\n    case actions.CLEAR_ERRORS:\r\n      return {}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Register\\Register.js",["122"],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\errorActions.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\reducers\\postReducer.js",["123"],"import * as actions from '../actions/index'\r\n\r\nconst initialState = {\r\n  post: null,\r\n  posts: null,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.GET_POSTS:\r\n      return { ...state, posts: action.posts }\r\n\r\n    case actions.GET_POST:\r\n      return { ...state, post: action.post }\r\n\r\n    case actions.ADD_POST:\r\n      return { ...state, posts: null }\r\n\r\n    case actions.EDIT_POST:\r\n      return { ...state, post: null }\r\n\r\n    case actions.DELETE_POST:\r\n      return { ...state, post: null }\r\n\r\n    case actions.ADD_COMMENT:\r\n      return { ...state, post: action.post }\r\n\r\n    case actions.DELETE_COMMENT:\r\n      return { ...state, post: action.post }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\store\\actions\\postActions.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Spinner\\Spinner.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Post\\Post.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\PostPage\\PostPage.js",["124"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport Spinner from '../Spinner/Spinner'\r\nimport AddComment from '../AddComment/AddComment'\r\nimport Comments from '../Comments/Comments'\r\n\r\nimport { getPost, deletePost } from '../../store/actions/postActions'\r\n\r\nconst PostPage = ({ user, post, getPost, deletePost, match }) => {\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id\r\n    getPost(id)\r\n  }, [])\r\n\r\n  const delPost = () => {\r\n    const id = match.params.id\r\n    deletePost(id)\r\n    history.replace('/')\r\n  }\r\n\r\n  if (!post) {\r\n    return <Spinner />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p className=\"text-muted\">{post.author.name}</p>\r\n      <p>{post.text}</p>\r\n\r\n      {user && user.id === post.author._id ? (\r\n        <div>\r\n          <button onClick={delPost} className=\"btn btn-danger\">\r\n            Удалить\r\n          </button>\r\n          <Link to={`/edit/${post._id}`} className=\"btn btn-success ms-2\">\r\n            Редактировать\r\n          </Link>\r\n        </div>\r\n      ) : null}\r\n\r\n      <AddComment />\r\n      <Comments comments={post.comments} />\r\n    </div>\r\n  )\r\n}\r\n\r\n// export class PostPage extends React.Component {\r\n//   componentDidMount() {\r\n//     const id = this.props.match.params.id\r\n//     this.props.getPost(id)\r\n//   }\r\n\r\n//   deletePost = () => {\r\n//     const id = this.props.match.params.id\r\n//     this.props.deletePost(id, this.props.history)\r\n//   }\r\n\r\n//   render() {\r\n//     const { post, user } = this.props\r\n\r\n//     if (!post) {\r\n//       return <Spinner />\r\n//     }\r\n\r\n//     return (\r\n//       <div>\r\n//         <h1>{post.title}</h1>\r\n//         <p className=\"text-muted\">{post.author.name}</p>\r\n//         <p>{post.text}</p>\r\n\r\n//         {user && user.id === post.author._id ? (\r\n//           <div>\r\n//             <button onClick={this.deletePost} className=\"btn btn-danger\">\r\n//               Удалить\r\n//             </button>\r\n//             <Link to={`/edit/${post._id}`} className=\"btn btn-success ms-2\">\r\n//               Редактировать\r\n//             </Link>\r\n//           </div>\r\n//         ) : null}\r\n\r\n//         <AddComment />\r\n//         <Comments comments={post.comments} />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.authReducer.user,\r\n  post: state.postReducer.post,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost, deletePost })(PostPage)\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\AddPost\\AddPost.js",["125"],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\EditPost\\EditPost.js",["126"],"import React, { useEffect, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Spinner from '../Spinner/Spinner'\r\n\r\nimport { editPost, getPost } from '../../store/actions/postActions'\r\nimport withAuth from '../../hocs/withAuth'\r\n\r\nconst EditPost = ({ post, getPost, editPost, match }) => {\r\n  let history = useHistory()\r\n\r\n  const titleInput = useRef()\r\n  const textInput = useRef()\r\n\r\n  useEffect(() => {\r\n    const id = match.params.id\r\n    getPost(id)\r\n  }, [])\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const id = match.params.id\r\n    editPost(id, {\r\n      title: titleInput.current.value,\r\n      text: textInput.current.value,\r\n    })\r\n    history.push(`/post/${id}`)\r\n  }\r\n\r\n  if (!post) {\r\n    return <Spinner />\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\">Заголовок</label>\r\n        <input\r\n          ref={titleInput}\r\n          type=\"text\"\r\n          defaultValue={post.title}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\">Содержание</label>\r\n        <input\r\n          ref={textInput}\r\n          type=\"text\"\r\n          defaultValue={post.text}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n        Редактировать\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\n// export class EditPost extends React.Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n\r\n//     this.titleInput = React.createRef()\r\n//     this.textInput = React.createRef()\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     const id = this.props.match.params.id\r\n//     this.props.getPost(id)\r\n//   }\r\n\r\n//   onSubmit = (e) => {\r\n//     e.preventDefault()\r\n//     const id = this.props.match.params.id\r\n//     this.props.editPost(\r\n//       id,\r\n//       {\r\n//         title: this.titleInput.current.value,\r\n//         text: this.textInput.current.value,\r\n//       },\r\n//       this.props.history\r\n//     )\r\n//   }\r\n\r\n//   render() {\r\n//     const { post } = this.props\r\n\r\n//     if (!post) {\r\n//       return <Spinner />\r\n//     }\r\n\r\n//     return (\r\n//       <form onSubmit={this.onSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"title\">Заголовок</label>\r\n//           <input\r\n//             ref={this.titleInput}\r\n//             type=\"text\"\r\n//             defaultValue={post.title}\r\n//             className=\"form-control\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"title\">Содержание</label>\r\n//           <input\r\n//             ref={this.textInput}\r\n//             type=\"text\"\r\n//             defaultValue={post.text}\r\n//             className=\"form-control\"\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"btn btn-primary mt-2\">\r\n//           Редактировать\r\n//         </button>\r\n//       </form>\r\n//     )\r\n//   }\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.postReducer.post,\r\n})\r\n\r\nexport default withAuth(\r\n  connect(mapStateToProps, { editPost, getPost })(EditPost)\r\n)\r\n\r\n// export default AddPost\r\n","D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\AddComment\\AddComment.js",["127"],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Comments\\Comments.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\components\\Comment\\Comment.js",[],"D:\\web\\works\\react\\практика\\Галишников\\client\\src\\hocs\\withAuth.js",["128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":12,"column":6,"nodeType":"135","endLine":12,"endColumn":8,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":8,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":7,"column":1,"nodeType":"141","endLine":18,"endColumn":2},{"ruleId":"133","severity":1,"message":"142","line":10,"column":6,"nodeType":"135","endLine":10,"endColumn":8,"suggestions":"143"},{"ruleId":"139","severity":1,"message":"140","line":5,"column":1,"nodeType":"141","endLine":16,"endColumn":2},{"ruleId":"133","severity":1,"message":"144","line":23,"column":6,"nodeType":"135","endLine":23,"endColumn":25,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"140","line":8,"column":1,"nodeType":"141","endLine":34,"endColumn":2},{"ruleId":"133","severity":1,"message":"146","line":17,"column":6,"nodeType":"135","endLine":17,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"146","line":19,"column":6,"nodeType":"135","endLine":19,"endColumn":8,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":11,"column":9,"nodeType":"155","messageId":"156","endLine":11,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":4,"column":1,"nodeType":"141","endLine":29,"endColumn":2},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"React Hook useEffect has missing dependencies: 'clearErrors', 'history', and 'user'. Either include them or remove the dependency array. If 'clearErrors' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'history' and 'logoutUser'. Either include them or remove the dependency array. If 'logoutUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has missing dependencies: 'getPost' and 'match.params.id'. Either include them or remove the dependency array. If 'getPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["164"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},"Update the dependencies array to be: [getPosts]",{"range":"176","text":"177"},"Update the dependencies array to be: [clearErrors, history, user]",{"range":"178","text":"179"},"Update the dependencies array to be: [history, logoutUser]",{"range":"180","text":"181"},"Update the dependencies array to be: [user, clearErrors, history]",{"range":"182","text":"183"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"184","text":"185"},{"range":"186","text":"185"},[306,308],"[getPosts]",[555,557],"[clearErrors, history, user]",[269,271],"[history, logoutUser]",[581,600],"[user, clearErrors, history]",[524,526],"[getPost, match.params.id]",[527,529]]